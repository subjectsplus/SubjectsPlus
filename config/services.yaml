# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app.upload_destination: '/uploads/' # Relative path from public/ for file uploads
    app.small_image_dimensions: '150x150' # Maximum dimensions (width x height) in pixels for small image
    app.medium_image_dimensions: '500x500' # Maximum dimensions (width x height) in pixels for medium image
    app.large_image_dimensions: '750x750' # Maximum dimensions (width x height) in pixels for large image

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $projectDir: '%kernel.project_dir%'
            $uploadDestination: '%app.upload_destination%'
            $smallImageDimensions: '%app.small_image_dimensions%' 
            $mediumImageDimensions: '%app.medium_image_dimensions%'
            $largeImageDimensions: '%app.large_image_dimensions%'


    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # monolog doctrine handler
    monolog.db_error_handler:
        class: App\Logger\MonologDBHandler
        arguments: ['@doctrine.orm.entity_manager', !php/const Monolog\Logger::ERROR]
    
    # monolog processor
    monolog.processor.request:
        class: App\Logger\RequestProcessor
        arguments: ['@request_stack', '@service_container']
        tags:
            - { name: monolog.processor, method: processRecord, handler: db_error_handler }
    
    # vichuploaderbundle
    App\EventListener\UploadPostRemoveListener:
        tags:
            - { name: kernel.event_listener, event: vich_uploader.post_remove }

